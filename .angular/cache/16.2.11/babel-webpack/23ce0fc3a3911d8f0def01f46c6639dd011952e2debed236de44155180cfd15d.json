{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IncomeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8002/';\n  }\n  getLastIncome() {\n    const url = `${this.apiUrl}income`;\n    return this.http.get(url).pipe(catchError(() => of()));\n  }\n  static #_ = this.ɵfac = function IncomeService_Factory(t) {\n    return new (t || IncomeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IncomeService,\n    factory: IncomeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","of","IncomeService","constructor","http","apiUrl","getLastIncome","url","get","pipe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\projects\\finance-machine-ft\\src\\app\\machine\\services\\income.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, of, map } from 'rxjs';\r\nimport { Income } from '../interfaces/income';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class IncomeService {\r\n    private apiUrl: string = 'http://localhost:8002/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getLastIncome(): Observable<Income> {\r\n        const url: string = `${this.apiUrl}income`;\r\n        return this.http.get<Income>(url)\r\n            .pipe(\r\n                catchError(() => of())\r\n            );\r\n    }\r\n}"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,EAAE,QAAa,MAAM;;;AAItD,OAAM,MAAOC,aAAa;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,wBAAwB;EAET;EAExCC,aAAaA,CAAA;IACT,MAAMC,GAAG,GAAW,GAAG,IAAI,CAACF,MAAM,QAAQ;IAC1C,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAASD,GAAG,CAAC,CAC5BE,IAAI,CACDT,UAAU,CAAC,MAAMC,EAAE,EAAE,CAAC,CACzB;EACT;EAAC,QAAAS,CAAA,G;qBAXQR,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbb,aAAa;IAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;IAAAC,UAAA,EADA;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}