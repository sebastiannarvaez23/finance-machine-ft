{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MachineService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/';\n  }\n  getAllPayments() {\n    const url = `${this.apiUrl}/payment`;\n    return this.http.get(url).pipe(catchError(() => of([])));\n  }\n  static #_ = this.ɵfac = function MachineService_Factory(t) {\n    return new (t || MachineService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MachineService,\n    factory: MachineService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","of","MachineService","constructor","http","apiUrl","getAllPayments","url","get","pipe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\projects\\finance-machine-ft\\src\\app\\machine\\services\\machine.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, of, map } from 'rxjs';\r\nimport { Payment } from '../interfaces/payments';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MachineService {\r\n    private apiUrl: string = 'http://localhost:8080/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllPayments(): Observable<Payment[]> {\r\n        const url: string = `${this.apiUrl}/payment`;\r\n        return this.http.get<Payment[]>(url)\r\n            .pipe(\r\n                catchError(() => of([]))\r\n            );\r\n    }\r\n}"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,EAAE,QAAa,MAAM;;;AAItD,OAAM,MAAOC,cAAc;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,wBAAwB;EAET;EAExCC,cAAcA,CAAA;IACV,MAAMC,GAAG,GAAW,GAAG,IAAI,CAACF,MAAM,UAAU;IAC5C,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC,CAC/BE,IAAI,CACDT,UAAU,CAAC,MAAMC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC3B;EACT;EAAC,QAAAS,CAAA,G;qBAXQR,cAAc,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdb,cAAc;IAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;IAAAC,UAAA,EADD;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}